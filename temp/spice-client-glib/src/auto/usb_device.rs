// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files.git)
// DO NOT EDIT

use glib::translate::*;

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct UsbDevice(Boxed<ffi::SpiceUsbDevice>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::spice_usb_device_get_type(), ptr as *mut _) as *mut ffi::SpiceUsbDevice,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::spice_usb_device_get_type(), ptr as *mut _),
        type_ => || ffi::spice_usb_device_get_type(),
    }
}

impl UsbDevice {
    #[doc(alias = "spice_usb_device_get_description")]
    #[doc(alias = "get_description")]
    pub fn description(&mut self, format: Option<&str>) -> Option<glib::GString> {
        unsafe {
            from_glib_full(ffi::spice_usb_device_get_description(
                self.to_glib_none_mut().0,
                format.to_glib_none().0,
            ))
        }
    }
}
